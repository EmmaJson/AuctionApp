@model AuctionApp.Models.Auctions.AuctionDetailsVm

@{
    ViewData["Title"] = "Details";
}

<h1>Auction Details</h1>

@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success">
    @TempData["SuccessMessage"]
</div>
}

@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger">
    @TempData["ErrorMessage"]
</div>
}

<a href="@Url.Action("CreateBid", "Auctions", new { id = Model.Id })" class="cool-button">
    Bid on this item
</a>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StartingPrice)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StartingPrice)
        </dd>
        
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UserName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UserName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsActive)
        </dd>
    </dl>
</div>


<p/>
<div class="table-responsive"> 
    <h4>Bids</h4>
    <table class="table">
        <thead>
        <tr>
            <th>
                <b>Bidder</b>
            </th>
            <th>
                <b>Bid laid at</b>
            </th>
            <th>
                <b>Bid</b>
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.BidVMs)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BidDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
        </tr>
        }
        </tbody>
    </table>
</div>


<div>
    <a href="@Url.Action("CreateDescription", "Auctions", new { id = Model.Id })" class="cool-button">
        Edit description
    </a>
    <a href="@Url.Action("Index", "Auctions")" class="cool-button">Back to all auctions</a>
</div>



<head>
    <style>
        .cool-button {
            color: #fff;
            background-color: #b30000;
            border: 2px solid #b30000;
            padding: 10px 20px;
            border-radius: 10px;
            font-size: 16px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.3s ease;
            display: inline-block;
            cursor: pointer;
            text-decoration: none;
        }

        .cool-button:hover {
            color: #fff;
            background-color: #5a0303;
            transform: scale(1.02);
        }

        .table {
            width: 100%; /* Full-width table */
            table-layout: fixed; /* Optional: This can be used to evenly distribute the columns */
            border-collapse: collapse; /* Merge borders */
            padding: 15px; /* Add padding for better spacing */
            text-align: left; /* Align text to the left */
            border-bottom: 1px solid #c8c8c8; /* Add a bottom border */
            background-color: #ffffff; /* Light gray background for headers */
            color: #333; /* Dark text for headers */
            font-weight: bold; /* Make headers bold */
        }

        .table-responsive {
            overflow-x: auto;  /* Allows horizontal scrolling if the table overflows */
            width: 100%;       /* Ensures the table doesn't go outside the container */
        }

        .clickable-row {
            cursor: pointer; /* Pointer cursor on hover */
            transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s; /* Smooth background transition */
        }

        /* Hover effect for clickable rows */
        .clickable-row:hover {
            background-color: rgba(252, 22, 22, 0.57); /* Darker blue on hover */
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); /* Enhanced shadow on hover */
        }
    </style>
</head>